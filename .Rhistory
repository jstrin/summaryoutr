library(dplyr)
?summarise_each
grepl("count", c("COUNT"))
grepl("count", c("count"))
grepl("count", c("COUNT"), ignore.case = T)
summaryStatIdentifier <- function(stat.summarise){
if(stat.summarise %in% c("count"), ignore.case = T){
stat.summariser1 <- function(){
n(!is.na(.))
}
}
}
summaryStatIdentifier <- function(stat.summarise){
if( stat.summarise %in% c("count"), ignore.case = T){
stat.summariser1 <- function(){
n(!is.na(.))
}
}
}
summaryStatIdentifier <- function(stat.summarise){
if( grepl(stat.summarise %in% c("count"), ignore.case = T)){
stat.summariser1 <- function(){
n(!is.na(.))
}
}
}
temp <- summaryStatIdentifier("CoUNt")
temp <- summaryStatIdentifier(stat.summarise = "CoUNt")
summaryStatIdentifier <- function(stat.summarise){
if( grepl("count" %in% stat.summarise, ignore.case = T)){
stat.summariser1 <- function(){
n(!is.na(.))
}
}
}
temp <- summaryStatIdentifier("CoUNt")
?grepl
temp <- "count"
summaryStatIdentifier <- function(stat.summarise){
if( grepl("count", stat.summarise, ignore.case = T)){
stat.summariser1 <- function(){
n(!is.na(.))
}
}
}
temp <- summaryStatIdentifier("CoUNt")
temp()
temp(c(1,3,4,6, 7,89,2))
summaryStatIdentifier <- function(stat.summarise){
if( grepl("count", stat.summarise, ignore.case = T)){
stat.summariser1 <- function(){
sum(!is.na(.))
}
}
}
temp <- summaryStatIdentifier("CoUNt")
temp(c(1,3,4,6, 7,89,2))
temp
summaryStatIdentifier <- function(stat.summarise){
if( grepl("count", stat.summarise, ignore.case = T)){
stat.summariser1 <- function(.){
sum(!is.na(.))
}
}
}
temp <- summaryStatIdentifier("CoUNt")
temp(c(1,3,4,6, 7,89,2))
temp(c(1,3,4,6, 7,89,NA))
temp(c(1,3,4,6, NA,89,4))
summaryStatIdentifier <- function(stat.summarise){
if( grepl("count", stat.summarise, ignore.case = T)){
stat.summariser1 <- function(.){
sum(!is.na(.))
}
}
if(grepl("Average", stat.summarise, ignore.case = T) |
grepl("mean", stat.summarise, ignore.case = T) |
grepl("ave", stat.summarise, ignore.case = T)){
stat.summariser1 <- function(.){
mean(., na.rm = T)
}
}
}
temp <- summaryStatIdentifier("CoUNt")
temp(c(1,3,4,6, NA,89,4))
summaryStatIdentifier <- function(stat.summarise){
if( grepl("count", stat.summarise, ignore.case = T)){
stat.summariser1 <- function(.){
sum(!is.na(.))
}
}else{
if(grepl("Average", stat.summarise, ignore.case = T) |
grepl("mean", stat.summarise, ignore.case = T) |
grepl("ave", stat.summarise, ignore.case = T)){
stat.summariser1 <- function(.){
mean(., na.rm = T)
}
}
}
}
temp <- summaryStatIdentifier("CoUNt")
temp(c(1,3,4,6, NA,89,4))
temp <- summaryStatIdentifier("mean")
temp(c(1,3,4,6, NA,89,4))
temp <- summaryStatIdentifier("Ave")
temp(c(1,3,4,6, NA,89,4))
summarize_df <- function(df, stat1='Average', stat2='Count',
l.variables = 'all.summary', l.grouping = 'first.summary'){
if(l.grouping == 'first.summary'){
l.grouping <- names(df)[-1]
}
if(l.variables == 'all.summary'){
l.variables <- names(df)[-which(names(df) %in% l.grouping)]
}
stat.func1 <- summaryStatIdentifier(stat1)
stat.func2 <- summaryStatIdentifier(stat2)
df_out <- df %>%
select(l.grouping, l.variables) %>%
group_by( l.grouping ) %>%
summarise_each_(funs(stat1 = stat.func1(.), stat2 = stat.func2(.)) )
}
df.test <- cars
summary(df.test)
row.names(df.test)
df.test <- flights
df.test <- petals
df.test <- iris
summary(df.test)
summarize_df(df = df.test, l.grouping = "Species")
summarize_df <- function(df, stat1='Average', stat2='Count',
l.variables = 'all.summary', l.grouping = 'first.summary'){
if(l.grouping == 'first.summary'){
l.grouping <- names(df)[-1]
}
if(l.variables == 'all.summary'){
l.variables <- names(df)[-which(names(df) %in% l.grouping)]
}
stat.func1 <- summaryStatIdentifier(stat1)
stat.func2 <- summaryStatIdentifier(stat2)
df_out <- df %>%
select_(l.grouping, l.variables) %>%
group_by_( l.grouping ) %>%
summarise_each_(funs(stat1 = stat.func1(.), stat2 = stat.func2(.)) )
}
summarize_df(df = df.test, l.grouping = "Species")
df <- df.test
l.grouping <- "Species"
stat1='Average'
stat2='Count'
.variables = 'all.summary'
if(l.grouping == 'first.summary'){
l.grouping <- names(df)[-1]
}
if(l.variables == 'all.summary'){
l.variables <- names(df)[-which(names(df) %in% l.grouping)]
}
stat.func1 <- summaryStatIdentifier(stat1)
stat.func2 <- summaryStatIdentifier(stat2)
l.variables = 'all.summary'
if(l.grouping == 'first.summary'){
l.grouping <- names(df)[-1]
}
if(l.variables == 'all.summary'){
l.variables <- names(df)[-which(names(df) %in% l.grouping)]
}
stat.func1 <- summaryStatIdentifier(stat1)
stat.func2 <- summaryStatIdentifier(stat2)
df_out <- df %>%
select_(l.grouping, l.variables) %>%
group_by_( l.grouping ) %>%
summarise_each_(funs(stat1 = stat.func1(.), stat2 = stat.func2(.)) )
df_out <- df %>%
select_(l.grouping, l.variables) %>%
group_by_( l.grouping )
df_out <- df %>%
select_(l.grouping, l.variables) %>%
group_by_( l.grouping ) %>%
summarise_each(funs(stat1 = stat.func1(.), stat2 = stat.func2(.)) )
summarize_df <- function(df, stat1='Average', stat2='Count',
l.variables = 'all.summary', l.grouping = 'first.summary'){
if(l.grouping == 'first.summary'){
l.grouping <- names(df)[-1]
}
if(l.variables == 'all.summary'){
l.variables <- names(df)[-which(names(df) %in% l.grouping)]
}
stat.func1 <- summaryStatIdentifier(stat1)
stat.func2 <- summaryStatIdentifier(stat2)
df_out <- df %>%
select_(l.grouping, l.variables) %>%
group_by_( l.grouping ) %>%
summarise_each(funs(stat1 = stat.func1(.), stat2 = stat.func2(.)) )
}
rm(list=ls())
summarize_df <- function(df, stat1='Average', stat2='Count',
l.variables = 'all.summary', l.grouping = 'first.summary'){
if(l.grouping == 'first.summary'){
l.grouping <- names(df)[-1]
}
if(l.variables == 'all.summary'){
l.variables <- names(df)[-which(names(df) %in% l.grouping)]
}
stat.func1 <- summaryStatIdentifier(stat1)
stat.func2 <- summaryStatIdentifier(stat2)
df_out <- df %>%
select_(l.grouping, l.variables) %>%
group_by_( l.grouping ) %>%
summarise_each(funs(stat1 = stat.func1(.), stat2 = stat.func2(.)) )
}
################
#
# Create a function to define the summary
#  stat aliases
#
# Returns a function
#
####################
summaryStatIdentifier <- function(summary.stat){
if( grepl("count", summary.stat, ignore.case = T)){
stat.summariser <- function(.){
sum(!is.na(.))
}
}else{
if(grepl("Average", summary.stat, ignore.case = T) |
grepl("mean", summary.stat, ignore.case = T) |
grepl("ave", summary.stat, ignore.case = T)){
stat.summariser <- function(.){
mean(., na.rm = T)
}
}else{
if(grepl("Median", summary.stat, ignore.case = T)){
stat.summariser <- function(.){
median(., na.rm = T)
}
}
}
}
stat.summariser
}
df.test <- iris
summarize_df(df = df.test, l.grouping = "Species")
summarize_df <- function(df, stat1='Average', stat2='Count',
l.variables = 'all.summary', l.grouping = 'first.summary'){
if(l.grouping == 'first.summary'){
l.grouping <- names(df)[-1]
}
if(l.variables == 'all.summary'){
l.variables <- names(df)[-which(names(df) %in% l.grouping)]
}
stat.func1 <- summaryStatIdentifier(stat1)
stat.func2 <- summaryStatIdentifier(stat2)
df_out <- df %>%
select_(l.grouping, l.variables) %>%
group_by_( l.grouping ) %>%
summarise_each(funs(stat1 = stat.func1(.), stat2 = stat.func2(.)) )
df_out
}
summarize_df(df = df.test, l.grouping = "Species")
df.test
temp <- df.test %>%
group_by("Species") %>%
summarize_each(funs(ave = mean(., na.rm = T), count = sum(!is.na(.))))
names(df.test)
temp <- df.test %>%
group_by("Species") %>%
summarize_each(funs(ave = mean(., na.rm = T), count = sum(!is.na(.))), c(Sepal.Length))
temp
summarize_each(funs(ave = mean(., na.rm = T), count = sum(!is.na(.))), c(Sepal.Length, Sepal.Width))
summarize_df <- function(df, stat1='Average', stat2='Count',
l.variables = 'all.summary', l.grouping = 'first.summary'){
if(l.grouping == 'first.summary'){
l.grouping <- names(df)[-1]
}
if(l.variables == 'all.summary'){
l.variables <- names(df)[-which(names(df) %in% l.grouping)]
}
stat.func1 <- summaryStatIdentifier(stat1)
stat.func2 <- summaryStatIdentifier(stat2)
df_out
for(i in l.variables){
df_temp <- df %>%
select_(l.grouping, i) %>%
group_by_( l.grouping ) %>%
summarise_each(funs(stat1 = stat.func1(.), stat2 = stat.func2(.)) )
names(df_temp) <- c(l.grouping, paste(i, stat1, sep = "_"), paste(i, stat2 = "_"))
if(i %in% l.variables[1]){
df_out <- df_temp
}else{
df_out <- left_join(df_out, df_temp, by = l.grouping)
}
}
}
summarize_df <- function(df, stat1='Average', stat2='Count',
l.variables = 'all.summary', l.grouping = 'first.summary'){
if(l.grouping == 'first.summary'){
l.grouping <- names(df)[-1]
}
if(l.variables == 'all.summary'){
l.variables <- names(df)[-which(names(df) %in% l.grouping)]
}
stat.func1 <- summaryStatIdentifier(stat1)
stat.func2 <- summaryStatIdentifier(stat2)
df_out
for(i in l.variables){
df_temp <- df %>%
select_(l.grouping, i) %>%
group_by_( l.grouping ) %>%
summarise_each(funs(stat1 = stat.func1(.), stat2 = stat.func2(.)) )
names(df_temp) <- c(l.grouping, paste(i, stat1, sep = "_"), paste(i, stat2 = "_"))
if(i %in% l.variables[1]){
df_out <- df_temp
}else{
df_out <- left_join(df_out, df_temp, by = l.grouping)
}
}
df_out
}
summarize_df <- function(df, stat1='Average', stat2='Count',
l.variables = 'all.summary', l.grouping = 'first.summary'){
if(l.grouping == 'first.summary'){
l.grouping <- names(df)[-1]
}
if(l.variables == 'all.summary'){
l.variables <- names(df)[-which(names(df) %in% l.grouping)]
}
stat.func1 <- summaryStatIdentifier(stat1)
stat.func2 <- summaryStatIdentifier(stat2)
df_out <- NULL
for(i in l.variables){
df_temp <- df %>%
select_(l.grouping, i) %>%
group_by_( l.grouping ) %>%
summarise_each(funs(stat1 = stat.func1(.), stat2 = stat.func2(.)) )
names(df_temp) <- c(l.grouping, paste(i, stat1, sep = "_"), paste(i, stat2 = "_"))
if(i %in% l.variables[1]){
df_out <- df_temp
}else{
df_out <- left_join(df_out, df_temp, by = l.grouping)
}
}
df_out
}
summarize_df(df = df.test, l.grouping = "Species")
summarize_df <- function(df, stat1='Average', stat2='Count',
l.variables = 'all.summary', l.grouping = 'first.summary'){
if(l.grouping == 'first.summary'){
l.grouping <- names(df)[-1]
}
if(l.variables == 'all.summary'){
l.variables <- names(df)[-which(names(df) %in% l.grouping)]
}
print("First")
print(stat2)
stat.func1 <- summaryStatIdentifier(stat1)
stat.func2 <- summaryStatIdentifier(stat2)
df_out <- NULL
for(i in l.variables){
df_temp <- df %>%
select_(l.grouping, i) %>%
group_by_( l.grouping ) %>%
summarise_each(funs(stat1 = stat.func1(.), stat2 = stat.func2(.)) )
names(df_temp) <- c(l.grouping, paste(i, stat1, sep = "_"), paste(i, stat2 = "_"))
if(i %in% l.variables[1]){
df_out <- df_temp
}else{
df_out <- left_join(df_out, df_temp, by = l.grouping)
}
}
df_out
}
summarize_df(df = df.test, l.grouping = "Species")
summarize_df <- function(df, stat1='Average', stat2='Count',
l.variables = 'all.summary', l.grouping = 'first.summary'){
if(l.grouping == 'first.summary'){
l.grouping <- names(df)[-1]
}
if(l.variables == 'all.summary'){
l.variables <- names(df)[-which(names(df) %in% l.grouping)]
}
print("First")
print(stat2)
stat.func1 <- summaryStatIdentifier(stat1)
stat.func2 <- summaryStatIdentifier(stat2)
print("Second")
print(stat2)
df_out <- NULL
for(i in l.variables){
df_temp <- df %>%
select_(l.grouping, i) %>%
group_by_( l.grouping ) %>%
summarise_each(funs(stat1 = stat.func1(.), stat2 = stat.func2(.)) )
names(df_temp) <- c(l.grouping, paste(i, stat1, sep = "_"), paste(i, stat2 = "_"))
if(i %in% l.variables[1]){
df_out <- df_temp
}else{
df_out <- left_join(df_out, df_temp, by = l.grouping)
}
}
df_out
}
summarize_df(df = df.test, l.grouping = "Species")
summarize_df <- function(df, stat1='Average', stat2='Count',
l.variables = 'all.summary', l.grouping = 'first.summary'){
if(l.grouping == 'first.summary'){
l.grouping <- names(df)[-1]
}
if(l.variables == 'all.summary'){
l.variables <- names(df)[-which(names(df) %in% l.grouping)]
}
print("First")
print(stat2)
stat.func1 <- summaryStatIdentifier(stat1)
stat.func2 <- summaryStatIdentifier(stat2)
print("Second")
print(stat2)
df_out <- NULL
for(i in l.variables){
df_temp <- df %>%
select_(l.grouping, i) %>%
group_by_( l.grouping ) %>%
summarise_each(funs(stat1 = stat.func1(.), stat2 = stat.func2(.)) )
names(df_temp) <- c(l.grouping, paste(i, stat1, sep = "_"), paste(i, stat2 = "_"))
if(i %in% l.variables[1]){
df_out <- df_temp
}else{
df_out <- left_join(df_out, df_temp, by = l.grouping)
}
}
print("First")
print(stat2)
df_out
}
summarize_df(df = df.test, l.grouping = "Species")
summarize_df <- function(df, stat1='Average', stat2='Count',
l.variables = 'all.summary', l.grouping = 'first.summary'){
if(l.grouping == 'first.summary'){
l.grouping <- names(df)[-1]
}
if(l.variables == 'all.summary'){
l.variables <- names(df)[-which(names(df) %in% l.grouping)]
}
stat.func1 <- summaryStatIdentifier(stat1)
stat.func2 <- summaryStatIdentifier(stat2)
df_out <- NULL
for(i in l.variables){
df_temp <- df %>%
select_(l.grouping, i) %>%
group_by_( l.grouping ) %>%
summarise_each(funs(stat1 = stat.func1(.), stat2 = stat.func2(.)) )
names(df_temp) <- c(l.grouping, paste(i, stat1, sep = "_"), paste(i, stat2, sep = "_"))
if(i %in% l.variables[1]){
df_out <- df_temp
}else{
df_out <- left_join(df_out, df_temp, by = l.grouping)
}
}
df_out
}
summarize_df(df = df.test, l.grouping = "Species")
names(mtcars)
summarize_df(df = mtcars, l.grouping = "cyl")
summarize_df(df = mtcars, l.grouping = "cyl", stat1 = "median")
temp <- data.frame()
temp2 <- full_join(temp, df.test)
temp <- data.frame(Species = NA)
temp2 <- full_join(temp, df.test)
?matrix
